<?xml version="1.0" ?>
<?xml-stylesheet type="text/xsl" href="configuration.xsl" ?>

<!-- Put site-specific property overrides in this file. -->

<configuration>

  <!-- storage -->
  <property>
    <name>storage.crawl.id</name>
    <value>information_0815_integration_test</value>
    <description>crawl pages for information/intelligence mining</description>
  </property>

  <property>
    <name>storage.data.store.class</name>
    <value>org.apache.gora.hbase.store.HBaseStore</value>
  </property>

  <!-- fetcher -->
  <property>
    <name>fetcher.fetch.mode</name>
    <value>native</value>
    <description>native, proxy and crowdsourcing</description>
  </property>

  <property>
    <name>fetcher.threads.per.queue</name>
    <value>3</value>
  </property>

  <property>
    <name>fetcher.threads.fetch</name>
    <value>5</value>
  </property>

  <property>
    <name>fetcher.net.bandwidth.m</name>
    <value>4</value>
    <description>Hardware bandwidth in Mbytes, if exceed the limit,
    slows down the task scheduling.
    </description>
  </property>

  <property>
    <name>nutch.master.domain</name>
    <value>localhost</value>
    <description></description>
  </property>

  <property>
    <name>nutch.master.hostname</name>
    <value>localhost</value>
    <description>galaxyeye, all slave nutch update proxy server list and other
      resource if any from the master nutch server.
      it must be the host name since we need to check whether it's the host
      itself.
    </description>
  </property>

  <!-- fetch rules -->

  <property>
    <name>http.useHttp11</name>
    <value>true</value>
  </property>

  <property>
    <name>http.robots.obey</name>
    <value>false</value>
    <description>sorry, we do not obey the robots.txt protocol
    </description>
  </property>

  <property>
    <name>http.agent.name</name>
    <value>Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:16.0) Gecko/20100101 Firefox/16.0</value>
    <description></description>
  </property>

  <property>
    <name>http.timeout</name>
    <value>300000</value>
    <description>we have a very long time out setting, it's for a reason
    </description>
  </property>

  <property>
    <name>mapred.task.timeout.mins</name>
    <value>10</value>
    <description>fetch thread will exit if no any fetch item for
      mapred.task.timeout minutes</description>
  </property>

  <property>
    <name>http.fetch.max.retry</name>
    <value>3</value>
  </property>

  <property>
    <name>http.content.limit</name>
    <value>1048576</value>
  </property>

  <property>
    <name>parser.skip.truncated</name>
    <value>false</value>
    <description>no truncate actually since we give a very large value for
      http.content.limit</description>
  </property>

  <property>
    <name>parser.character.encoding.default</name>
    <value>utf-8</value>
  </property>

  <property>
    <name>db.fetch.interval.default</name>
    <value>25920000</value>
  </property>

  <property>
    <name>db.fetch.interval.max</name>
    <value>25920000</value>
  </property>

  <property>
    <name>db.ignore.external.links</name>
    <value>false</value>
    <description>If true, outlinks leading from a page to external hosts will be ignored</description>
  </property>

  <property>
    <name>db.ignore.internal.links</name>
    <value>false</value>
  </property>

  <!-- Parsing -->
  <property>
    <name>db.max.anchor.length</name>
    <value>200</value>
    <description>The maximum number of characters permitted in an anchor.
    </description>
  </property>

  <!-- 
  <property>
    <name>plugin.includes</name>
   <value>protocol-(http|crowd)|urlfilter-regex|parse-(html)|index-(basic|anchor)|indexer-solr|urlnormalizer-(pass|regex|basic)|scoring-opic</value>
  </property>
   -->

  <!-- Scoring -->
  <!-- This is a temporary solution to indicate important links -->
  <property>
    <name>db.score.important.links</name>
    <value>product,item,detail,view,show,good,store,activity</value>
    <description></description>
  </property>

  <!-- Generate -->
  <property>
    <name>generator.map.threads.per.task</name>
    <value>50</value>
    <description></description>
  </property>

  <!-- Hadoop Turning -->
  <property>
    <name>mapred.map.tasks</name>
    <value>1</value>
    <description></description>
  </property>

</configuration>
